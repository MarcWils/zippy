{"version":3,"file":"site.js","mappings":"sCAAA,IAAYA,E,0EAAZ,SAAYA,GACR,yCACA,kCACH,CAHD,CAAYA,IAAe,kBAAfA,EAAe,I,sFCA3B,eAEA,oBAGI,WAAAC,CAAYC,GACRC,KAAKD,KAAOA,EACZC,KAAKC,SAAWF,EAAKG,IACzB,CAEO,QAAAC,GAGH,OAFkBH,KAAKD,KAAKK,MAAM,EAAG,GAEpBC,cACZC,MAAMC,GAAWP,KAAKQ,kBAAkBD,IACjD,CAEQ,iBAAAC,CAAkBC,GACtB,OAAIT,KAAKU,gBAAgBC,gBAAgBF,UAAW,IAAIG,WAAWH,IACxD,EAAAZ,gBAAgBgB,gBAEhB,EAAAhB,gBAAgBiB,YAE/B,CAEQ,eAAAJ,CAAgBK,EAAeC,GACnC,OAAID,EAAEE,YAAcD,EAAEC,YAGfF,EAAEG,OAAM,CAACC,EAAKC,IAAMD,GAAOH,EAAEI,IACxC,E,GC7BAC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,C,MCtBA,eACA,SAEMG,EAAoCC,SAASC,eAAe,mBAC5DC,EAAkBF,SAASC,eAAe,mBAE5CF,GACAA,EAAgBI,iBAAiB,UAAU,MAK/C,SAA2BC,GAGvB,GAFAF,EAAgBG,UAAUC,OAAO,UAEZ,IAAjBF,EAAMG,OAAgB,OAC1B,MAAMC,EAAU,IAAI,EAAAC,YAAYL,EAAM,IAEtCJ,SAASC,eAAe,eAAeS,UAAYF,EAAQrC,SAC3DqC,EAAQnC,WACHG,MAAKmC,IACF,MAAMC,EAAUD,GAAU,EAAA5C,gBAAgBgB,gBAAkB,oBAAsB,oBAClFiB,SAASC,eAAe,sBAAsBS,UAAYE,CAAO,GAE7E,CAhBQC,CAAkBd,EAAgBK,MAAM,G","sources":["webpack://zippy/./scripts/entities/detectionResult.ts","webpack://zippy/./scripts/zipAnalyzer.ts","webpack://zippy/webpack/bootstrap","webpack://zippy/./scripts/app.ts"],"sourcesContent":["export enum DetectionResult {\r\n    validZipArchive,\r\n    noZipArchive\r\n}","import { DetectionResult } from \"./entities/detectionResult\";\r\n\r\nexport class ZipAnalyzer {\r\n    file: File;\r\n    public fileName: string;\r\n    constructor(file: File) {\r\n        this.file = file;\r\n        this.fileName = file.name;\r\n    }\r\n\r\n    public validate(): Promise<DetectionResult> {\r\n        const signature = this.file.slice(0, 4);\r\n\r\n        return signature.arrayBuffer()\r\n            .then((buffer) => this.validateSignature(buffer));\r\n    }\r\n\r\n    private validateSignature(signature: ArrayBuffer): DetectionResult {\r\n        if (this.signaturesMatch(LocalFileHeader.signature, new Uint8Array(signature))) {\r\n            return DetectionResult.validZipArchive;\r\n        } else {\r\n            return DetectionResult.noZipArchive;\r\n        }\r\n    }\r\n\r\n    private signaturesMatch(a: Uint8Array, b: Uint8Array): boolean {\r\n        if (a.byteLength != b.byteLength) {\r\n            return false;\r\n        }\r\n        return a.every((val, i) => val == b[i]);\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { DetectionResult } from \"./entities/detectionResult\";\r\nimport { ZipAnalyzer } from \"./zipAnalyzer\";\r\n\r\nconst zipFileSelector = <HTMLInputElement>document.getElementById('zipFileSelector');\r\nconst zipFileContents = document.getElementById('zipFileContents');\r\n\r\nif (zipFileSelector) {\r\n    zipFileSelector.addEventListener('change', () => {\r\n        onZipFileSelected(zipFileSelector.files);\r\n    });\r\n}\r\n\r\nfunction onZipFileSelected(files: FileList) {\r\n    zipFileContents.classList.remove('hidden');\r\n\r\n    if (files.length !== 1) { return; }\r\n    const zipFile = new ZipAnalyzer(files[0]);\r\n\r\n    document.getElementById('zipFileName').innerText = zipFile.fileName;\r\n    zipFile.validate()\r\n        .then(result => {\r\n            const outcome = result == DetectionResult.validZipArchive ? \"Valid ZIP archive\" : \"Not a ZIP archive\";\r\n            document.getElementById('zipDetectionResult').innerText = outcome;\r\n        });\r\n}\r\n"],"names":["DetectionResult","constructor","file","this","fileName","name","validate","slice","arrayBuffer","then","buffer","validateSignature","signature","signaturesMatch","LocalFileHeader","Uint8Array","validZipArchive","noZipArchive","a","b","byteLength","every","val","i","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","zipFileSelector","document","getElementById","zipFileContents","addEventListener","files","classList","remove","length","zipFile","ZipAnalyzer","innerText","result","outcome","onZipFileSelected"],"sourceRoot":""}