@page "/"
@using System.IO;
@using Zippy.ZipAnalysis;
@using Zippy.ZipAnalysis.Extensions;
@using Zippy.ZipAnalysis.ZipFormat;
@using Microsoft.AspNetCore.Components.Forms;

<div class="text-center pb-5">
    <h1 class="display-4">Welcome to Zippy</h1>
</div>

<div class="container">
    <div class="row">
        <div class="col">
            <InputFile OnChange="@LoadFiles" id="fileSelector" class="@((string.IsNullOrEmpty(errorMessage)? "form-control" : "form-control is-invalid"))" aria-describedby="fileSelectorFeedback" />
            <div id="fileSelectorFeedback" class="invalid-feedback">
                @errorMessage
            </div>
        </div>
    </div>
    @if (headers != null && headers.Any())
    {
        <div class="row pt-5 justify-content-md-center">
            <div class="col">
                <ZipFileComponent FileName="@fileName" Headers="headers" />
            </div>
        </div>
    }
</div>


@code
{
    private string? fileName;
    private string? errorMessage;
    private IEnumerable<ZipAnalysis.ZipFormat.ZipHeaderBase>? headers;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        fileName = e.File.Name;

        if (e.File.Size > ZipInspector.MaxSupportedSize)
        {
            errorMessage = $"File is too big. Only files up to {ZipInspector.MaxSupportedSize.ToReadableFileSize()} are supported.";
        }
        else
        {
            headers = await ZipInspector.GetZipHeadersAsync(e.File.OpenReadStream(ZipInspector.MaxSupportedSize)).ToListAsync();
            errorMessage = !headers.Any() ? "Please select a valid ZIP-file" : null;
        }
    }
}
