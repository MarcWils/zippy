@using Zippy.Site.Extensions;
@using Zippy.Site.Shared.Input;


<div class="accordion-item">
    <h2 class="accordion-header" id="@("header_" + _htmlId)">
        <button class="accordion-button collapsed" type="button"
                data-bs-toggle="collapse"
                data-bs-target="@("#" + _htmlId)"
                aria-expanded="false"
                aria-controls="@_htmlId">
            @if (CentralDirectoryHeader != null)
            {
                @:Central directory header (@CentralDirectoryHeader.FileName)
            }
        </button>
    </h2>
    <div id="@_htmlId" class="accordion-collapse collapse" aria-labelledby="@("header_" + _htmlId)">
        <div class="accordion-body">
            @if (CentralDirectoryHeader != null)
            {
                <table class="table table-condensed table-striped table-hover table-bordered">
                    <thead>
                        <tr class="table-light">
                            <th>Property</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Position first byte</td>
                            <td>@CentralDirectoryHeader.PositionFirstByte</td>
                        </tr>
                        <tr>
                            <td>Length</td>
                            <td>@CentralDirectoryHeader.Length</td>
                        </tr>
                    </tbody>
                </table>
                <table class="table table-condensed table-striped table-hover table-bordered">
                    <thead>
                        <tr class="table-light">
                            <th>Field</th>
                            <th>Raw value</th>
                            <th>Display value</th>
                            <th>Explanation</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Signature</td>
                            <td>@CentralDirectoryHeader.Signature.ToHexString()</td>
                            <td></td>
                            <td>Should always be 0x02014b50</td>
                        </tr>
                        <tr>
                            <td>Version made by</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.VersionMadeBy" /></td>
                            <td>@CentralDirectoryHeader.VersionMadeBy</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Version needed to extract</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.VersionNeededToExtract" /></td>
                            <td>@CentralDirectoryHeader.VersionNeededToExtract</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>General purpose bit flag</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.GeneralPurposeBitFlag" /></td>
                            <td>@CentralDirectoryHeader.GeneralPurposeBitFlag.ToBinaryString()</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Compression method</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.CompressionMethod" />"</td>
                            <td>@CentralDirectoryHeader.CompressionMethod</td>
                            <td>@CentralDirectoryHeader.CompressionMethod.ToCompressionMethod()</td>
                        </tr>
                        <tr>
                            <td>File last modification time</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.LastModificationFileTime" />"</td>
                            <td>@CentralDirectoryHeader.LastModificationFileTime.ToTime()</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>File last modification date</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.LastModificationFileDate" />"</td>
                            <td>@CentralDirectoryHeader.LastModificationFileDate.ToDate().ToShortDateString()</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>CRC-32 of uncompressed data</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.Crc32" />"</td>
                            <td>@CentralDirectoryHeader.Crc32</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Compressed size</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.CompressedSize" />"</td>
                            <td>@CentralDirectoryHeader.CompressedSize.ToReadableFileSize()</td>
                            <td>0xffffffff for ZIP64</td>
                        </tr>
                        <tr>
                            <td>Uncompressed size</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.UncompressedSize" />"</td>
                            <td>@CentralDirectoryHeader.UncompressedSize.ToReadableFileSize()</td>
                            <td>0xffffffff for ZIP64</td>
                        </tr>
                        <tr>
                            <td>File name length</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.FileNameLength" /></td>
                            <td>@CentralDirectoryHeader.FileNameLength</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Extra field length</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.ExtraFieldLength" /></td>
                            <td>@CentralDirectoryHeader.ExtraFieldLength</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>File comment length</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.FileCommentLength" /></td>
                            <td>@CentralDirectoryHeader.FileCommentLength</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Disk number where file starts</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.DiskNumberStart" /></td>
                            <td>@CentralDirectoryHeader.DiskNumberStart</td>
                            <td>0xffff for ZIP64</td>
                        </tr>
                        <tr>
                            <td>Internal file attributes</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.InternalFileAttributes" /></td>
                            <td>@CentralDirectoryHeader.InternalFileAttributes.ToBinaryString()</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>External file attributes</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.ExternalFileAttributes" /></td>
                            <td>@CentralDirectoryHeader.ExternalFileAttributes.ToBinaryString()</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Relative offset of local file header</td>
                            <td><HexInput @bind-Value="CentralDirectoryHeader.RelativeOffsetOfLocalHeader" /></td>
                            <td>@CentralDirectoryHeader.RelativeOffsetOfLocalHeader</td>
                            <td>Relative offset of local file header (or 0xffffffff for ZIP64). This is the number of bytes between the start of the first disk on which the file occurs, and the start of the local file header. This allows software reading the central directory to locate the position of the file inside the ZIP file.</td>
                        </tr>
                        <tr>
                            <td>File name</td>
                            <td colspan="3">@CentralDirectoryHeader.FileName</td>
                        </tr>
                        <tr>
                            <td>File comment</td>
                            <td colspan="3">@CentralDirectoryHeader.FileComment</td>
                        </tr>
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

@code {
    private string _htmlId = $"cdh-{Guid.NewGuid()}";

    [Parameter]
    public CentralDirectoryHeader? CentralDirectoryHeader { get; set; }
}
