name: Deploy GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  pull_request:
    branches:
      - main  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '19'          
      - name: Install NPM dependencies
        run: npm ci
      - name: Run npm build
        run: npm run build
      - name: Run NPM tests
        run: npm run test
      - name: Build
        run: dotnet build --no-restore
      - name: Publish
        run: dotnet publish MarcWils.Zippy.csproj -c Release -o website
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: website/wwwroot/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
